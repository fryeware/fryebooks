
@{
    ViewBag.Title = "Fryeware";
}


@*<h2><img src="~/Images/logo3.png" style="height:40px;width:30px" />ryeware</h2>*@
<link href="~/Content/Hompage.css" rel="stylesheet" />
<link href="~/Content/Site.css" rel="stylesheet" />
<div>
    <h1 class="col-lg-12 fryewareHeader" >
        Welcome to Fryeware
    </h1>  <!-- title text  -->
    <h3 class="col-lg-12 fryewareHeader">     Connecting technology together</h3>
</div>
<svg id="graph" class="col-xs-12" viewBox="-300 -200 1000 500" preserveAspectRatio="none"></svg>
<div class="row">
    
</div>

<row class="row" style="height: 100px">
    <div class="infoBox infoBox1 col-xs-12" id="infobox1">
        <h4 class="list-group-item-heading infoBoxHead" id="infoBoxHeader">Software Development</h4>
        <p class="list-group-item-text infoBoxBody" id="infoBoxBody">Desktop, mobile, and web.</p>
    </div>

    <div class="infoBox infoBox2 col-xs-12" id="infobox2">
        <h4 class="list-group-item-heading" id="infoBoxHeader">Cyber Security</h4>
        <p class="list-group-item-text">Assessment and advanced tooling.</p>
    </div>

    <div class="infoBox infoBox3 col-xs-12" id="infobox3">
        <h4 class="list-group-item-heading" id="infoBoxHeader">Desktop and Server</h4>
        <p class="list-group-item-text">Deployment and management.</p>
    </div>

    <div class="infoBox infoBox4 col-xs-12" id="infobox4">
        <h4 class="list-group-item-heading" id="infoBoxHeader">Cloud Services</h4>
        <p class="list-group-item-text">Architecture and design.</p>
    </div>
</row>
<div class="row">

</div>


<style>

</style>
@*<script src='http://d3js.org/d3.v3.min.js'></script>*@
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="https://d3js.org/d3.v4.min.js"></script>

<div>
    <script>

        function mainLoop() {
            var infoBoxes = $(".infoBox");
            var idx = -1;

            function showInfoBoxes() {
                idx++;
                if (idx > 3) {
                    idx = 0;
                }
                infoBoxes.eq(idx)
                  .fadeIn(500)
                  .delay(2000)
                  .fadeOut(500, showInfoBoxes);
            }
            showInfoBoxes();
        }

        $(document).ready(function () {
            //$('#mainBody').css('background-image', "graph");
            mainLoop();
        });

        var svg = d3.select("svg"),
                    width = +svg.attr("width"),
                    height = +svg.attr("height");

        var color = d3.scaleOrdinal(d3.schemeCategory20);

        var simulation = d3.forceSimulation()
            .force("link", d3.forceLink().id(function (d) { return d.id; }).distance(300))
            .force("charge", d3.forceManyBody())
            .force("center", d3.forceCenter(width / 1.8, height / 1.5 ));

        d3.json("/DataService/GetGData", function (error, graph) {
            if (error) throw error;

            var link = svg.append("g")
                .attr("class", "links")
              .selectAll("line")
              .data(graph.links)
              .enter().append("line")
                .attr("stroke-width", function (d) { return Math.sqrt(d.value); });      

            var node = svg.append("g")
                .attr("class", "nodes")
              .selectAll("circle")
              .data(graph.nodes)
              .enter().append("circle")
                .attr("r", 25)
                .attr("fill", function (d) { return color(d.group); })
                .call(d3.drag()
                    .on("start", dragstarted)
                    .on("drag", dragged)
                    .on("end", dragended));

            node.append("title")
                .text(function (d) { return d.id; });

            simulation
                .nodes(graph.nodes)
                .on("tick", ticked);

            simulation.force("link")
                .links(graph.links);

            function ticked() {
                link
                    .attr("x1", function (d) { return d.source.x; })
                    .attr("y1", function (d) { return d.source.y; })
                    .attr("x2", function (d) { return d.target.x; })
                    .attr("y2", function (d) { return d.target.y; });

                node
                    .attr("cx", function (d) { return d.x; })
                    .attr("cy", function (d) { return d.y; });
            }
        });

        function dragstarted(d) {
            if (!d3.event.active) simulation.alphaTarget(0.3).restart();
            d.fx = d.x;
            d.fy = d.y;
        }

        function dragged(d) {
            d.fx = d3.event.x;
            d.fy = d3.event.y;
        }

        function dragended(d) {
            if (!d3.event.active) simulation.alphaTarget(0);
            d.fx = null;
            d.fy = null;
        }

        simulation.alphaTarget(0.3).restart();
        simulation.alphaTarget(0.3).restart();
        simulation.alphaTarget(0.3).restart();

    </script>
</div>


